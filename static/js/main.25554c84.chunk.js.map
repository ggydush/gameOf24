{"version":3,"sources":["components/GameBoard.js","components/MathInputBox.js","components/SolutionDetail.js","components/SolutionCard.js","components/HelpCard.js","scripts/utils.js","scripts/solver.js","components/App.js","index.js"],"names":["GameBoard","this","props","numbers","map","number","idx","onClick","data-value","className","key","small","renderList","Component","MathInputBox","value","total","onChange","onSubmit","backspace","action","type","icon","faBackspace","SolutionDetail","renderedList","solutions","solution","SolutionCard","userSolution","solved","newCard","show","toggleSolution","userSolutionInfo","HelpCard","toggleHelp","selectedSolveFor","onSolveForChange","Array","keys","index","permutations","inputArr","result","permute","arr","tmp","length","push","i","curr","slice","next","splice","concat","add","a","b","subtract","multiply","divide","solver","operations","symbols","Set","iterables","argv","prototype","call","arguments","argc","isNaN","copies","reduce","accumulator","forEach","a0","a1","product","o1","o2","o3","s1","indexOf","s2","s3","c","d","solutionName","split","sort","join","has","colors","red","orange","yellow","green","blue","purple","generateNumber","Math","floor","random","generateSolvableArray","solveFor","from","checkIfEqual","arr1","arr2","App","state","text","colorIdx","showSolution","showHelp","createNewCard","newColorIdx","Object","setState","setColor","componentDidMount","document","querySelector","addEventListener","e","target","tagName","includes","hideCards","updatedText","updateInput","onInputChange","event","onButtonClick","getAttribute","parseInt","checkIfSolved","inputNumbers","match","Number","numbersToCheck","submitSolution","preventDefault","classList","toggle","round","evaluate","string","acceptableChars","toLowerCase","char","replace","sanitizeInput","calculateOutput","rgb","documentElement","style","setProperty","href","faGithubSquare","ReactDOM","render"],"mappings":"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","file":"static/js/main.25554c84.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './GameBoard.css'\n\nexport default class GameBoard extends Component {\n\trenderList() {\n\t\treturn this.props.numbers.map((number, idx) => {\n\t\t\tconst onClick = this.props.onClick\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdata-value={number}\n\t\t\t\t\tclassName=\"number\"\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t>\n\t\t\t\t\t{number}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t}\n\trender() {\n\t\tconst onClick = this.props.onClick\n\t\tconst className = this.props.small ? 'game-board small' : 'game-board'\n\t\treturn (\n\t\t\t<div className={className}>\n\t\t\t\t<div data-value=\"+\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\t+\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"-\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\t-\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"/\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\t÷\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"*\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\tx\n\t\t\t\t</div>\n\t\t\t\t<div className=\"circle\">\n\t\t\t\t\t<div className=\"square\">\n\t\t\t\t\t\t<div data-value=\"(\" onClick={onClick}>\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div data-value=\")\" onClick={onClick}>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"cross\">{this.renderList()}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport './MathInputBox.css'\n\nconst MathInputBox = ({ value, total, onChange, onSubmit, backspace }) => {\n\treturn (\n\t\t<div className=\"math-input-box\">\n\t\t\t<form action=\"\" onSubmit={onSubmit}>\n\t\t\t\t<input onChange={onChange} value={value} type=\"text\" />\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faBackspace}\n\t\t\t\t\tclassName=\"backspace\"\n\t\t\t\t\tonClick={backspace}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<div className=\"output\">{total}</div>\n\t\t</div>\n\t)\n}\n\nexport default MathInputBox\n","import React from 'react'\n\nconst SolutionDetail = ({ solutions }) => {\n\tconst renderedList = solutions.map((solution, idx) => {\n\t\treturn (\n\t\t\t<div className=\"solution\" key={idx}>\n\t\t\t\t{solution}\n\t\t\t</div>\n\t\t)\n\t})\n\treturn (\n\t\t<div className=\"solution-detail\">\n\t\t\t<h2>Computed Solutions:</h2>\n\t\t\t{renderedList}\n\t\t</div>\n\t)\n}\n\nexport default SolutionDetail\n","import React from 'react'\nimport SolutionDetail from './SolutionDetail'\nimport './SolutionCard.css'\n\nconst SolutionCard = ({\n\tuserSolution,\n\tsolved,\n\tsolutions,\n\tnewCard,\n\tshow,\n\ttoggleSolution,\n}) => {\n\tif (!show) {\n\t\treturn null\n\t}\n\tconst createNewCard = () => {\n\t\ttoggleSolution()\n\t\tnewCard()\n\t}\n\tlet userSolutionInfo = ''\n\tif (userSolution && solved) {\n\t\tuserSolutionInfo = (\n\t\t\t<div className=\"user-solution-detail\">\n\t\t\t\t<h1 className=\"header\">Solved (EZ)</h1>\n\t\t\t\t<h2>User Solution:</h2>\n\t\t\t\t<div className=\"solution\">{userSolution}</div>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t{userSolutionInfo}\n\t\t\t<SolutionDetail solutions={solutions} />\n\t\t\t<button className=\"button\" onClick={createNewCard}>\n\t\t\t\tTry Another\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default SolutionCard\n","import React from 'react'\n\nimport './HelpCard.css'\nimport GameBoard from './GameBoard'\n\nconst HelpCard = ({ show, toggleHelp, selectedSolveFor, onSolveForChange }) => {\n\tif (!show) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h2>How To Play</h2>\n\n\t\t\t<p>\n\t\t\t\tI always enjoyed playing the <strong>24 Game</strong> in\n\t\t\t\telementary school, anyone else getting nostalgic? If not, the\n\t\t\t\trules are simple:\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\tFind a way to manipulate the 4 integers to create\n\t\t\t\t<strong> 24</strong> using addition, subtraction,\n\t\t\t\tmultiplication, and division. You must use all 4 numbers.<br />\n\t\t\t</p>\n\t\t\t<GameBoard numbers={[ 8, 3, 7, 2 ]} small={true} />\n\t\t\t<p>\n\t\t\t\tFor this card, an example solution would be:<br />\n\t\t\t\t<span>(8 - 2) x (7 - 3) = 24</span>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\tWe can also play the game with other numbers besides\n\t\t\t\t<select value={selectedSolveFor} onChange={onSolveForChange}>\n\t\t\t\t\t{[ ...Array(25).keys() ].map((value, index) => {\n\t\t\t\t\t\tif (value !== 0) {\n\t\t\t\t\t\t\treturn <option key={index}>{value}</option>\n\t\t\t\t\t\t}\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t</p>\n\t\t\t<button className=\"button\" onClick={toggleHelp}>\n\t\t\t\tOK I'm Ready!\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default HelpCard\n","/**\n * Create list of permuations from array\n * @param {Array} inputArr Array to perform permuations\n * @returns {Array} Permutation array\n */\nexport const permutations = (inputArr) => {\n\tlet result = []\n\tconst permute = (arr, tmp = []) => {\n\t\tif (arr.length === 0) {\n\t\t\tresult.push(tmp)\n\t\t} else {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tlet curr = arr.slice()\n\t\t\t\tlet next = curr.splice(i, 1)\n\t\t\t\tpermute(curr.slice(), tmp.concat(next))\n\t\t\t}\n\t\t}\n\t}\n\tpermute(inputArr)\n\treturn result\n}\n\n/**\n * Javascript implementation of itertools.product in python\n * https://gist.github.com/cybercase/db7dde901d7070c98c48\n * @param {iterable} iterables Any iterable\n * @param {Number} repeat Create product with itself repeat number times\n * @returns\n */\nexport function product(iterables, repeat = 3) {\n\tvar argv = Array.prototype.slice.call(arguments),\n\t\targc = argv.length\n\tif (argc === 2 && !isNaN(argv[argc - 1])) {\n\t\tvar copies = []\n\t\tfor (var i = 0; i < argv[argc - 1]; i++) {\n\t\t\tcopies.push(argv[0].slice())\n\t\t}\n\t\targv = copies\n\t}\n\treturn argv.reduce(\n\t\t(accumulator, value) => {\n\t\t\tvar tmp = []\n\t\t\taccumulator.forEach(function(a0) {\n\t\t\t\tvalue.forEach(function(a1) {\n\t\t\t\t\ttmp.push(a0.concat(a1))\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn tmp\n\t\t},\n\t\t[ [] ],\n\t)\n}\n","import { permutations, product } from './utils'\n\nconst add = (a, b) => {\n\treturn a + b\n}\n\nconst subtract = (a, b) => {\n\treturn a - b\n}\n\nconst multiply = (a, b) => {\n\treturn a * b\n}\n\nconst divide = (a, b) => {\n\tif (a < b || b === 0 || a % b !== 0) {\n\t\treturn 99999\n\t}\n\treturn a / b\n}\n\nconst solver = (numbers, total) => {\n\tconst operations = [ add, subtract, multiply, divide ]\n\tconst symbols = [ '+', '-', 'x', '÷' ]\n\tconst solutions = new Set()\n\tconst result = []\n\tfor (let [ o1, o2, o3 ] of product(operations, 3)) {\n\t\tlet s1 = symbols[operations.indexOf(o1)]\n\t\tlet s2 = symbols[operations.indexOf(o2)]\n\t\tlet s3 = symbols[operations.indexOf(o3)]\n\t\tfor (let [ a, b, c, d ] of permutations(numbers)) {\n\t\t\tlet solution = null\n\t\t\tif (o1(o2(a, b), o3(c, d)) === total) {\n\t\t\t\tsolution = `(${a} ${s2} ${b}) ${s1} (${c} ${s3} ${d})`\n\t\t\t} else if (o1(a, o2(b, o3(c, d))) === total) {\n\t\t\t\tsolution = `${a} ${s1} (${b} ${s2} (${c} ${s3} ${d}))`\n\t\t\t} else if (o1(o2(b, o3(c, d)), a) === total) {\n\t\t\t\tsolution = `${b} ${s2} (${c} ${s3} ${d}) ${s1} ${a}`\n\t\t\t} else if (o1(o2(o3(c, d), b), a) === total) {\n\t\t\t\tsolution = `((${c} ${s3} ${d}) ${s2} ${b}) ${s1} ${a}`\n\t\t\t}\n\t\t\tif (solution) {\n\t\t\t\tconst solutionName = solution.split('').sort().join('')\n\t\t\t\tif (!solutions.has(solutionName)) {\n\t\t\t\t\tsolutions.add(solutionName)\n\t\t\t\t\tresult.push(solution)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\n\nexport { add, subtract, multiply, divide, solver }\n","import React, { Component } from 'react'\nimport { evaluate } from 'mathjs'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithubSquare } from '@fortawesome/free-brands-svg-icons'\n\nimport GameBoard from './GameBoard'\nimport MathInputBox from './MathInputBox'\nimport SolutionCard from './SolutionCard'\nimport HelpCard from './HelpCard'\nimport { solver } from '../scripts/solver'\n\nimport './App.css'\n\nconst colors = {\n\tred: 'rgb(205, 82, 82)',\n\torange: 'rgb(225, 133, 63)',\n\tyellow: 'rgb(225, 179, 63)',\n\tgreen: 'rgb(71, 189, 154)',\n\tblue: 'rgb(63, 122, 225)',\n\tpurple: 'rgb(140, 111, 208)',\n}\n\nconst generateNumber = () => {\n\treturn Math.floor(Math.random() * 10)\n}\n\nconst generateSolvableArray = (solveFor) => {\n\twhile (true) {\n\t\tconst arr = Array.from({ length: 4 }, generateNumber)\n\t\tconst solution = solver(arr, solveFor)\n\t\tif (solution.length > 0) {\n\t\t\treturn [ arr, solution ]\n\t\t}\n\t}\n}\n\nconst checkIfEqual = (arr1, arr2) => {\n\treturn arr1.sort().join(',') === arr2.sort().join(',')\n}\n\nfunction sanitizeInput(string) {\n\tconst acceptableChars = [\n\t\t'0',\n\t\t'1',\n\t\t'2',\n\t\t'3',\n\t\t'4',\n\t\t'5',\n\t\t'6',\n\t\t'7',\n\t\t'8',\n\t\t'9',\n\t\t'(',\n\t\t')',\n\t\t'+',\n\t\t'-',\n\t\t'*',\n\t\t'x',\n\t\t'/',\n\t\t'÷',\n\t\t'\\u0020',\n\t]\n\tstring = string.toLowerCase()\n\tconst result = []\n\tfor (let char of string) {\n\t\tif (acceptableChars.includes(char)) {\n\t\t\tresult.push(char.replace('x', '*').replace('÷', '/'))\n\t\t}\n\t}\n\treturn result.join('')\n}\n\nexport default class App extends Component {\n\tstate = {\n\t\ttext: '',\n\t\tnumbers: [],\n\t\tsolutions: [],\n\t\tsolveFor: 24,\n\t\ttotal: 0, // Ideally exclude from state, but execute in Mathjs errors a lot\n\t\tcolorIdx: 5,\n\t\tshowSolution: false,\n\t\tshowHelp: true,\n\t}\n\n\tcreateNewCard = () => {\n\t\tconst [ arr, solutions ] = generateSolvableArray(this.state.solveFor)\n\t\tconst newColorIdx =\n\t\t\t(this.state.colorIdx + 1) % Object.keys(colors).length\n\t\tthis.setState({\n\t\t\ttext: '',\n\t\t\tnumbers: arr,\n\t\t\tsolutions: solutions,\n\t\t\ttotal: 0,\n\t\t\tshowSolution: false,\n\t\t\tcolorIdx: newColorIdx,\n\t\t})\n\t\tthis.setColor(newColorIdx)\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.createNewCard()\n\t\tthis.setColor(this.state.colorIdx)\n\t\tdocument.querySelector('.overlay').addEventListener('click', (e) => {\n\t\t\tif (\n\t\t\t\te.target.tagName !== 'path' &&\n\t\t\t\te.target.className.includes('overlay')\n\t\t\t) {\n\t\t\t\tif (this.state.showSolution || this.state.showHelp) {\n\t\t\t\t\tthis.hideCards()\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\tgetSolutions() {\n\t\treturn solver(this.state.numbers, this.state.solveFor)\n\t}\n\n\tcalculateOutput(text) {\n\t\ttry {\n\t\t\treturn Math.round(evaluate(text) * 100) / 100\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\n\tupdateInput(text) {\n\t\tconst updatedText = sanitizeInput(text)\n\t\tconst total =\n\t\t\ttext.length === 0\n\t\t\t\t? 0\n\t\t\t\t: this.calculateOutput(text) || this.state.total\n\t\tthis.setState({ text: updatedText, total: total })\n\t}\n\n\tbackspace = (e) => {\n\t\tconst updatedText = this.state.text.slice(0, -1)\n\t\tthis.updateInput(updatedText)\n\t}\n\n\tonInputChange = (event) => {\n\t\tthis.updateInput(event.target.value)\n\t}\n\n\tonButtonClick = (event) => {\n\t\tconst updatedText =\n\t\t\tthis.state.text + event.target.getAttribute('data-value')\n\t\tthis.updateInput(updatedText)\n\t}\n\n\tonSolveForChange = (event) => {\n\t\tthis.setState(\n\t\t\t{ solveFor: parseInt(event.target.value) },\n\t\t\tthis.createNewCard,\n\t\t)\n\t}\n\n\tsetColor(colorIdx) {\n\t\tconst rgb = colors[Object.keys(colors)[colorIdx]]\n\t\tdocument.documentElement.style.setProperty(\n\t\t\t'--game-card-background',\n\t\t\trgb,\n\t\t)\n\t}\n\n\tcheckIfSolved = () => {\n\t\tif (this.state.total === this.state.solveFor) {\n\t\t\tconst inputNumbers = this.state.text.match(/\\d+/g).map(Number)\n\t\t\tconst numbersToCheck = [ ...this.state.numbers ]\n\t\t\treturn checkIfEqual(inputNumbers, numbersToCheck)\n\t\t}\n\t}\n\n\tsubmitSolution = (event) => {\n\t\tevent.preventDefault()\n\t\tif (this.checkIfSolved()) {\n\t\t\tthis.toggleSolution()\n\t\t}\n\t}\n\n\thideCards = () => {\n\t\tdocument.querySelector('.overlay').classList.toggle('hide')\n\t\tthis.setState({ showSolution: false, showHelp: false })\n\t}\n\n\ttoggleSolution = () => {\n\t\tthis.hideCards()\n\t\tthis.setState({ showSolution: !this.state.showSolution })\n\t}\n\n\ttoggleHelp = () => {\n\t\tthis.hideCards()\n\t\tthis.setState({ showHelp: !this.state.showHelp })\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<div className=\"overlay\" />\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h1>Solve for: {this.state.solveFor}</h1>\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tnumbers={this.state.numbers}\n\t\t\t\t\t\tonClick={this.onButtonClick}\n\t\t\t\t\t/>\n\t\t\t\t\t<MathInputBox\n\t\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t\t\tonSubmit={this.submitSolution}\n\t\t\t\t\t\ttotal={this.state.total}\n\t\t\t\t\t\tbackspace={this.backspace}\n\t\t\t\t\t/>\n\t\t\t\t\t<SolutionCard\n\t\t\t\t\t\tuserSolution={this.state.text}\n\t\t\t\t\t\tsolved={this.checkIfSolved()}\n\t\t\t\t\t\tsolutions={this.state.solutions}\n\t\t\t\t\t\tnewCard={this.createNewCard}\n\t\t\t\t\t\tshow={this.state.showSolution}\n\t\t\t\t\t\ttoggleSolution={this.toggleSolution}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tonClick={this.submitSolution}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"button\"\n\t\t\t\t\t\t\tonClick={this.toggleSolution}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tI Give Up\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button className=\"button\" onClick={this.toggleHelp}>\n\t\t\t\t\t\t\tHow to Play\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"github\">\n\t\t\t\t\t\t<a href=\"https://github.com/ggydush/gameOf24\">\n\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\t\ticon={faGithubSquare}\n\t\t\t\t\t\t\t\t\tclassName=\"github-icon\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<HelpCard\n\t\t\t\t\t\tshow={this.state.showHelp}\n\t\t\t\t\t\ttoggleHelp={this.toggleHelp}\n\t\t\t\t\t\tselectedSolveFor={this.state.solveFor}\n\t\t\t\t\t\tonSolveForChange={this.onSolveForChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}