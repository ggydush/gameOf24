{"version":3,"sources":["images/example.png","components/GameCard.js","components/MathInputBox.js","components/SolutionDetail.js","components/SolutionCard.js","components/HelpPage.js","scripts/utils.js","scripts/solver.js","components/App.js","index.js"],"names":["module","exports","GameCard","this","props","numbers","map","number","idx","onClick","data-value","className","key","renderList","Component","MathInputBox","value","total","onChange","onSubmit","backspace","action","type","icon","faBackspace","SolutionDetail","renderedList","solutions","solution","SolutionCard","userSolution","solved","newCard","showSolution","userSolutionInfo","HelpPage","show","showHideHelp","src","ExampleImage","alt","permutations","inputArr","result","permute","arr","tmp","length","push","i","curr","slice","next","splice","concat","add","a","b","subtract","multiply","divide","solver","operations","symbols","Set","iterables","argv","Array","prototype","call","arguments","argc","isNaN","copies","reduce","accumulator","forEach","a0","a1","product","o1","o2","o3","s1","indexOf","s2","s3","c","d","solutionName","split","sort","join","has","generateNumber","Math","floor","random","generateSolvableArray","solveFor","from","checkIfEqual","arr1","arr2","App","state","text","showHelp","createNewCard","setState","componentDidMount","document","querySelector","addEventListener","e","target","showHideCard","updatedText","updateInput","onInputChange","event","onButtonClick","getAttribute","checkIfSolved","inputNumbers","match","Number","numbersToCheck","submitSolution","preventDefault","round","evaluate","string","acceptableChars","toLowerCase","char","includes","replace","sanitizeInput","calculateOutput","ReactDOM","render"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,qC,sRCGtBC,G,2LACN,IAAD,OACZ,OAAOC,KAAKC,MAAMC,QAAQC,KAAI,SAACC,EAAQC,GACtC,IAAMC,EAAU,EAAKL,MAAMK,QAC3B,OACC,yBACCC,aAAYH,EACZI,UAAU,SACVC,IAAKJ,EACLC,QAASA,GAERF,Q,+BAMJ,IAAME,EAAUN,KAAKC,MAAMK,QAC3B,OACC,yBAAKE,UAAU,aACd,yBAAKD,aAAW,IAAIC,UAAU,YAAYF,QAASA,GAAnD,KAGA,yBAAKC,aAAW,IAAIC,UAAU,YAAYF,QAASA,GAAnD,KAGA,yBAAKC,aAAW,IAAIC,UAAU,YAAYF,QAASA,GAAnD,QAGA,yBAAKC,aAAW,IAAIC,UAAU,YAAYF,QAASA,GAAnD,KAGA,yBAAKE,UAAU,UACd,yBAAKA,UAAU,UACd,yBAAKD,aAAW,IAAID,QAASA,GAA7B,KAGA,yBAAKC,aAAW,IAAID,QAASA,GAA7B,MAID,yBAAKE,UAAU,SAASR,KAAKU,oB,GAzCIC,c,gBCkBvBC,G,MAhBM,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UACzD,OACC,yBAAKT,UAAU,kBACd,0BAAMU,OAAO,GAAGF,SAAUA,GACzB,2BAAOD,SAAUA,EAAUF,MAAOA,EAAOM,KAAK,SAC9C,kBAAC,IAAD,CACCC,KAAMC,IACNb,UAAU,YACVF,QAASW,KAGX,yBAAKT,UAAU,UAAUM,MCEbQ,EAhBQ,SAAC,GAAmB,IACpCC,EADmC,EAAhBC,UACMrB,KAAI,SAACsB,EAAUpB,GAC7C,OACC,yBAAKG,UAAU,WAAWC,IAAKJ,GAC7BoB,MAIJ,OACC,yBAAKjB,UAAU,mBACd,mDACCe,ICsBWG,G,MA/BM,SAAC,GAMf,IALNC,EAKK,EALLA,aACAC,EAIK,EAJLA,OACAJ,EAGK,EAHLA,UACAK,EAEK,EAFLA,QAGA,IADK,EADLC,aAGC,OAAO,KAER,IAAIC,EAAmB,GAUvB,OATIJ,GAAgBC,IACnBG,EACC,yBAAKvB,UAAU,wBACd,wBAAIA,UAAU,UAAd,eACA,8CACA,yBAAKA,UAAU,YAAYmB,KAK7B,yBAAKnB,UAAU,QACbuB,EACD,kBAAC,EAAD,CAAgBP,UAAWA,IAC3B,4BAAQhB,UAAU,SAASF,QAASuB,GAApC,kB,iBCIYG,G,MA5BE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aACzB,OAAKD,EAIJ,yBAAKzB,UAAU,QACd,2CACA,2DAC8B,2CAD9B,sFAIC,6BACA,6BALD,oDAOC,uCAPD,8DAQ8B,6BAC7B,yBAAK2B,IAAKC,IAAcC,IAAI,yBAC5B,6BAVD,+CAW6C,6BAX7C,qBAcA,4BAAQ7B,UAAU,SAASF,QAAS4B,GAApC,kBAnBM,OCDII,EAAe,SAACC,GAC5B,IAAIC,EAAS,GAab,OAZgB,SAAVC,EAAWC,GAAmB,IAAdC,EAAa,uDAAP,GAC3B,GAAmB,IAAfD,EAAIE,OACPJ,EAAOK,KAAKF,QAEZ,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAIE,OAAQE,IAAK,CACpC,IAAIC,EAAOL,EAAIM,QACXC,EAAOF,EAAKG,OAAOJ,EAAG,GAC1BL,EAAQM,EAAKC,QAASL,EAAIQ,OAAOF,KAIpCR,CAAQF,GACDC,GCjBR,IAAMY,EAAM,SAACC,EAAGC,GACf,OAAOD,EAAIC,GAGNC,EAAW,SAACF,EAAGC,GACpB,OAAOD,EAAIC,GAGNE,EAAW,SAACH,EAAGC,GACpB,OAAOD,EAAIC,GAGNG,EAAS,SAACJ,EAAGC,GAClB,OAAID,EAAIC,GAAW,IAANA,GAAWD,EAAIC,IAAM,EAC1B,MAEDD,EAAIC,GAGNI,EAAS,SAACxD,EAASY,GACxB,IAAM6C,EAAa,CAAEP,EAAKG,EAAUC,EAAUC,GACxCG,EAAU,CAAE,IAAK,IAAK,IAAK,QAC3BpC,EAAY,IAAIqC,IAChBrB,EAAS,GAJmB,uBAKlC,YDGM,SAAiBsB,GAAuB,wDAAC,IAC3CC,EAAOC,MAAMC,UAAUjB,MAAMkB,KAAKC,WACrCC,EAAOL,EAAKnB,OACb,GAAa,IAATwB,IAAeC,MAAMN,EAAKK,EAAO,IAAK,CAEzC,IADA,IAAIE,EAAS,GACJxB,EAAI,EAAGA,EAAIiB,EAAKK,EAAO,GAAItB,IACnCwB,EAAOzB,KAAKkB,EAAK,GAAGf,SAErBe,EAAOO,EAER,OAAOP,EAAKQ,QACX,SAACC,EAAa3D,GACb,IAAI8B,EAAM,GAMV,OALA6B,EAAYC,SAAQ,SAASC,GAC5B7D,EAAM4D,SAAQ,SAASE,GACtBhC,EAAIE,KAAK6B,EAAGvB,OAAOwB,UAGdhC,IAER,CAAE,KCvBwBiC,CAAQjB,EAAY,GAA/C,+CAAmD,CAAC,IAAD,yBAAxCkB,EAAwC,KAApCC,EAAoC,KAAhCC,EAAgC,KAC9CC,EAAKpB,EAAQD,EAAWsB,QAAQJ,IAChCK,EAAKtB,EAAQD,EAAWsB,QAAQH,IAChCK,EAAKvB,EAAQD,EAAWsB,QAAQF,IAHc,uBAIlD,YAA2BzC,EAAapC,GAAxC,+CAAkD,CAAC,IAAD,yBAAvCmD,EAAuC,KAApCC,EAAoC,KAAjC8B,EAAiC,KAA9BC,EAA8B,KAC7C5D,EAAW,KAUf,GATIoD,EAAGC,EAAGzB,EAAGC,GAAIyB,EAAGK,EAAGC,MAAQvE,EAC9BW,EAAQ,WAAO4B,EAAP,YAAY6B,EAAZ,YAAkB5B,EAAlB,aAAwB0B,EAAxB,aAA+BI,EAA/B,YAAoCD,EAApC,YAA0CE,EAA1C,KACER,EAAGxB,EAAGyB,EAAGxB,EAAGyB,EAAGK,EAAGC,OAASvE,EACrCW,EAAQ,UAAM4B,EAAN,YAAW2B,EAAX,aAAkB1B,EAAlB,YAAuB4B,EAAvB,aAA8BE,EAA9B,YAAmCD,EAAnC,YAAyCE,EAAzC,MACER,EAAGC,EAAGxB,EAAGyB,EAAGK,EAAGC,IAAKhC,KAAOvC,EACrCW,EAAQ,UAAM6B,EAAN,YAAW4B,EAAX,aAAkBE,EAAlB,YAAuBD,EAAvB,YAA6BE,EAA7B,aAAmCL,EAAnC,YAAyC3B,GACvCwB,EAAGC,EAAGC,EAAGK,EAAGC,GAAI/B,GAAID,KAAOvC,IACrCW,EAAQ,YAAQ2D,EAAR,YAAaD,EAAb,YAAmBE,EAAnB,aAAyBH,EAAzB,YAA+B5B,EAA/B,aAAqC0B,EAArC,YAA2C3B,IAEhD5B,EAAU,CACb,IAAM6D,EAAe7D,EAAS8D,MAAM,IAAIC,OAAOC,KAAK,IAC/CjE,EAAUkE,IAAIJ,KAClB9D,EAAU4B,IAAIkC,GACd9C,EAAOK,KAAKpB,MAnBmC,oFALjB,kFA6BlC,OAAOe,GCvCFmD,G,MAAiB,WACtB,OAAOC,KAAKC,MAAsB,GAAhBD,KAAKE,YAGlBC,EAAwB,SAACC,GAC9B,OAAa,CACZ,IAAMtD,EAAMsB,MAAMiC,KAAK,CAAErD,OAAQ,GAAK+C,GAChClE,EAAWiC,EAAOhB,EAAKsD,GAC7B,GAAIvE,EAASmB,OAAS,EACrB,MAAO,CAAEF,EAAKjB,KAKXyE,EAAe,SAACC,EAAMC,GAC3B,OAAOD,EAAKX,OAAOC,KAAK,OAASW,EAAKZ,OAAOC,KAAK,M,IAkC9BY,E,2MACpBC,MAAQ,CACPC,KAAM,GACNrG,QAAS,GACTsB,UAAW,GACXwE,SAAU,GACVlF,MAAO,EACPgB,cAAc,EACd0E,UAAU,G,EAGXC,cAAgB,WAAO,IAAD,EACMV,EAAsB,EAAKO,MAAMN,UADvC,mBACbtD,EADa,KACRlB,EADQ,KAErB,EAAKkF,SAAS,CACbH,KAAM,GACNrG,QAASwC,EACTlB,UAAWA,EACXV,MAAO,EACPgB,cAAc,K,EAIhB6E,kBAAoB,WACnB,EAAKF,gBACLG,SAASC,cAAc,QAAQC,iBAAiB,SAAS,SAACC,GAC9B,QAAvBA,EAAEC,OAAOxG,YACZ,EAAKkG,SAAS,CAAE5E,cAAc,IAC9B,EAAK4E,SAAS,CAAEF,UAAU,S,EAI7BtE,aAAe,WACT,EAAKoE,MAAME,UACf,EAAKE,SAAS,CAAE5E,cAAc,IAE/B,EAAK4E,SAAS,CAAEF,UAAW,EAAKF,MAAME,Y,EAEvCS,aAAe,WACT,EAAKX,MAAMxE,cACf,EAAK4E,SAAS,CAAEF,UAAU,IAE3B,EAAKE,SAAS,CAAE5E,cAAe,EAAKwE,MAAMxE,gB,EAsB3Cb,UAAY,WACX,IAAMiG,EAAc,EAAKZ,MAAMC,KAAKvD,MAAM,GAAI,GAC9C,EAAKmE,YAAYD,I,EAGlBE,cAAgB,SAACC,GAChB,EAAKF,YAAYE,EAAML,OAAOnG,Q,EAE/ByG,cAAgB,SAACD,GAChB,IAAMH,EACL,EAAKZ,MAAMC,KAAOc,EAAML,OAAOO,aAAa,cAC7C,EAAKJ,YAAYD,I,EAElBM,cAAgB,WACf,GAAI,EAAKlB,MAAMxF,QAAU,EAAKwF,MAAMN,SAAU,CAC7C,IAAMyB,EAAe,EAAKnB,MAAMC,KAAKmB,MAAM,QAAQvH,IAAIwH,QACjDC,EAAc,YAAQ,EAAKtB,MAAMpG,SACvC,OAAOgG,EAAauB,EAAcG,K,EAIpCC,eAAiB,SAACR,GACjBA,EAAMS,iBACF,EAAKN,iBACR,EAAKd,SAAS,CAAE5E,cAAe,EAAKwE,MAAMxE,gB,8EA1C3C,OAAO4B,EAAO1D,KAAKsG,MAAMpG,QAASF,KAAKsG,MAAMN,Y,sCAG9BO,GACf,IACC,OAAOX,KAAKmC,MAAuB,IAAjBC,YAASzB,IAAe,IACzC,MAAOQ,GACR,OAAO,Q,kCAGGR,GACX,IAAMW,EAvFR,SAAuBe,GACtB,IAAMC,EAAkB,CACvB,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEDD,EAASA,EAAOE,cAChB,IAAM3F,EAAS,GAtBe,uBAuB9B,YAAiByF,EAAjB,+CAAyB,CAAC,IAAjBG,EAAgB,QACpBF,EAAgBG,SAASD,IAC5B5F,EAAOK,KAAKuF,EAAKE,QAAQ,IAAK,OAzBF,kFA4B9B,OAAO9F,EAAOiD,KAAK,IA2DE8C,CAAchC,GAC5BzF,EACW,IAAhByF,EAAK3D,OACF,EACA5C,KAAKwI,gBAAgBjC,IAASvG,KAAKsG,MAAMxF,MAC7Cd,KAAK0G,SAAS,CAAEH,KAAMW,EAAapG,MAAOA,M,+BA+B1C,OACC,yBAAKN,UAAU,OACd,kBAAC,EAAD,CACCN,QAASF,KAAKsG,MAAMpG,QACpBI,QAASN,KAAKsH,gBAEf,kBAAC,EAAD,CACCzG,MAAOb,KAAKsG,MAAMC,KAClBxF,SAAUf,KAAKoH,cACfpG,SAAUhB,KAAK6H,eACf/G,MAAOd,KAAKsG,MAAMxF,MAClBG,UAAWjB,KAAKiB,YAEjB,kBAAC,EAAD,CACCU,aAAc3B,KAAKsG,MAAMC,KACzB3E,OAAQ5B,KAAKwH,gBACbhG,UAAWxB,KAAKsG,MAAM9E,UACtBK,QAAS7B,KAAKyG,cACd3E,aAAc9B,KAAKsG,MAAMxE,eAG1B,yBAAKtB,UAAU,WACd,4BAAQA,UAAU,SAASF,QAASN,KAAK6H,gBAAzC,UAGA,4BAAQrH,UAAU,SAASF,QAASN,KAAKiH,cAAzC,aAGA,4BAAQzG,UAAU,SAASF,QAASN,KAAKkC,cAAzC,kBAID,kBAAC,EAAD,CACCD,KAAMjC,KAAKsG,MAAME,SACjBtE,aAAclC,KAAKkC,oB,GA9HSvB,aCxDjC8H,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAASC,cAAc,Y","file":"static/js/main.8e1a6a1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/example.9185b5c9.png\";","import React, { Component } from 'react'\nimport './GameCard.css'\n\nexport default class GameCard extends Component {\n\trenderList() {\n\t\treturn this.props.numbers.map((number, idx) => {\n\t\t\tconst onClick = this.props.onClick\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tdata-value={number}\n\t\t\t\t\tclassName=\"number\"\n\t\t\t\t\tkey={idx}\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t>\n\t\t\t\t\t{number}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t}\n\trender() {\n\t\tconst onClick = this.props.onClick\n\t\treturn (\n\t\t\t<div className=\"game-card\">\n\t\t\t\t<div data-value=\"+\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\t+\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"-\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\t-\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"/\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\tรท\n\t\t\t\t</div>\n\t\t\t\t<div data-value=\"*\" className=\"operation\" onClick={onClick}>\n\t\t\t\t\tx\n\t\t\t\t</div>\n\t\t\t\t<div className=\"circle\">\n\t\t\t\t\t<div className=\"square\">\n\t\t\t\t\t\t<div data-value=\"(\" onClick={onClick}>\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div data-value=\")\" onClick={onClick}>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"cross\">{this.renderList()}</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBackspace } from '@fortawesome/free-solid-svg-icons'\nimport './MathInputBox.css'\n\nconst MathInputBox = ({ value, total, onChange, onSubmit, backspace }) => {\n\treturn (\n\t\t<div className=\"math-input-box\">\n\t\t\t<form action=\"\" onSubmit={onSubmit}>\n\t\t\t\t<input onChange={onChange} value={value} type=\"text\" />\n\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\ticon={faBackspace}\n\t\t\t\t\tclassName=\"backspace\"\n\t\t\t\t\tonClick={backspace}\n\t\t\t\t/>\n\t\t\t</form>\n\t\t\t<div className=\"output\">{total}</div>\n\t\t</div>\n\t)\n}\n\nexport default MathInputBox\n","import React from 'react'\n\nconst SolutionDetail = ({ solutions }) => {\n\tconst renderedList = solutions.map((solution, idx) => {\n\t\treturn (\n\t\t\t<div className=\"solution\" key={idx}>\n\t\t\t\t{solution}\n\t\t\t</div>\n\t\t)\n\t})\n\treturn (\n\t\t<div className=\"solution-detail\">\n\t\t\t<h2>Computed Solutions:</h2>\n\t\t\t{renderedList}\n\t\t</div>\n\t)\n}\n\nexport default SolutionDetail\n","import React from 'react'\nimport SolutionDetail from './SolutionDetail'\nimport './SolutionCard.css'\n\nconst SolutionCard = ({\n\tuserSolution,\n\tsolved,\n\tsolutions,\n\tnewCard,\n\tshowSolution,\n}) => {\n\tif (!showSolution) {\n\t\treturn null\n\t}\n\tlet userSolutionInfo = ''\n\tif (userSolution && solved) {\n\t\tuserSolutionInfo = (\n\t\t\t<div className=\"user-solution-detail\">\n\t\t\t\t<h1 className=\"header\">Solved (EZ)</h1>\n\t\t\t\t<h2>User Solution:</h2>\n\t\t\t\t<div className=\"solution\">{userSolution}</div>\n\t\t\t</div>\n\t\t)\n\t}\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t{userSolutionInfo}\n\t\t\t<SolutionDetail solutions={solutions} />\n\t\t\t<button className=\"button\" onClick={newCard}>\n\t\t\t\tTry Another\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default SolutionCard\n","import React from 'react'\nimport ExampleImage from '../images/example.png'\nimport './HelpPage.css'\n\nconst HelpPage = ({ show, showHideHelp }) => {\n\tif (!show) {\n\t\treturn null\n\t}\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<h2>How To Play</h2>\n\t\t\t<p>\n\t\t\t\tI always enjoyed playing the <strong>24 Game</strong> in\n\t\t\t\telementary school, anyone else getting nostalgic? If not, the\n\t\t\t\trules are simple:\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\tFind a way to maniuplate the 4 integers to create\n\t\t\t\t<strong> 24</strong> using addition, subtraction,\n\t\t\t\tmultiplication, and division.<br />\n\t\t\t\t<img src={ExampleImage} alt=\"Card with 8, 3, 7, 2\" />\n\t\t\t\t<br />\n\t\t\t\tFor this card, an example solution would be:<br />\n\t\t\t\t(8 - 2) x (7 - 3)\n\t\t\t</p>\n\t\t\t<button className=\"button\" onClick={showHideHelp}>\n\t\t\t\tOK I'm Ready!\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default HelpPage\n","/**\n * Create list of permuations from array\n * @param {Array} inputArr Array to perform permuations\n * @returns {Array} Permutation array\n */\nexport const permutations = (inputArr) => {\n\tlet result = []\n\tconst permute = (arr, tmp = []) => {\n\t\tif (arr.length === 0) {\n\t\t\tresult.push(tmp)\n\t\t} else {\n\t\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\t\tlet curr = arr.slice()\n\t\t\t\tlet next = curr.splice(i, 1)\n\t\t\t\tpermute(curr.slice(), tmp.concat(next))\n\t\t\t}\n\t\t}\n\t}\n\tpermute(inputArr)\n\treturn result\n}\n\n/**\n * Javascript implementation of itertools.product in python\n * https://gist.github.com/cybercase/db7dde901d7070c98c48\n * @param {iterable} iterables Any iterable\n * @param {Number} repeat Create product with itself repeat number times\n * @returns\n */\nexport function product(iterables, repeat = 3) {\n\tvar argv = Array.prototype.slice.call(arguments),\n\t\targc = argv.length\n\tif (argc === 2 && !isNaN(argv[argc - 1])) {\n\t\tvar copies = []\n\t\tfor (var i = 0; i < argv[argc - 1]; i++) {\n\t\t\tcopies.push(argv[0].slice())\n\t\t}\n\t\targv = copies\n\t}\n\treturn argv.reduce(\n\t\t(accumulator, value) => {\n\t\t\tvar tmp = []\n\t\t\taccumulator.forEach(function(a0) {\n\t\t\t\tvalue.forEach(function(a1) {\n\t\t\t\t\ttmp.push(a0.concat(a1))\n\t\t\t\t})\n\t\t\t})\n\t\t\treturn tmp\n\t\t},\n\t\t[ [] ],\n\t)\n}\n","import { permutations, product } from './utils'\n\nconst add = (a, b) => {\n\treturn a + b\n}\n\nconst subtract = (a, b) => {\n\treturn a - b\n}\n\nconst multiply = (a, b) => {\n\treturn a * b\n}\n\nconst divide = (a, b) => {\n\tif (a < b || b === 0 || a % b !== 0) {\n\t\treturn 99999\n\t}\n\treturn a / b\n}\n\nconst solver = (numbers, total) => {\n\tconst operations = [ add, subtract, multiply, divide ]\n\tconst symbols = [ '+', '-', 'x', 'รท' ]\n\tconst solutions = new Set()\n\tconst result = []\n\tfor (let [ o1, o2, o3 ] of product(operations, 3)) {\n\t\tlet s1 = symbols[operations.indexOf(o1)]\n\t\tlet s2 = symbols[operations.indexOf(o2)]\n\t\tlet s3 = symbols[operations.indexOf(o3)]\n\t\tfor (let [ a, b, c, d ] of permutations(numbers)) {\n\t\t\tlet solution = null\n\t\t\tif (o1(o2(a, b), o3(c, d)) === total) {\n\t\t\t\tsolution = `(${a} ${s2} ${b}) ${s1} (${c} ${s3} ${d})`\n\t\t\t} else if (o1(a, o2(b, o3(c, d))) === total) {\n\t\t\t\tsolution = `${a} ${s1} (${b} ${s2} (${c} ${s3} ${d}))`\n\t\t\t} else if (o1(o2(b, o3(c, d)), a) === total) {\n\t\t\t\tsolution = `${b} ${s2} (${c} ${s3} ${d}) ${s1} ${a}`\n\t\t\t} else if (o1(o2(o3(c, d), b), a) === total) {\n\t\t\t\tsolution = `((${c} ${s3} ${d}) ${s2} ${b}) ${s1} ${a}`\n\t\t\t}\n\t\t\tif (solution) {\n\t\t\t\tconst solutionName = solution.split('').sort().join('')\n\t\t\t\tif (!solutions.has(solutionName)) {\n\t\t\t\t\tsolutions.add(solutionName)\n\t\t\t\t\tresult.push(solution)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\n\nexport { add, subtract, multiply, divide, solver }\n","import React, { Component } from 'react'\nimport { evaluate } from 'mathjs'\n\nimport GameCard from './GameCard'\nimport MathInputBox from './MathInputBox'\nimport SolutionCard from './SolutionCard'\nimport HelpPage from './HelpPage'\nimport { solver } from '../scripts/solver'\n\nimport './App.css'\n\nconst generateNumber = () => {\n\treturn Math.floor(Math.random() * 10)\n}\n\nconst generateSolvableArray = (solveFor) => {\n\twhile (true) {\n\t\tconst arr = Array.from({ length: 4 }, generateNumber)\n\t\tconst solution = solver(arr, solveFor)\n\t\tif (solution.length > 0) {\n\t\t\treturn [ arr, solution ]\n\t\t}\n\t}\n}\n\nconst checkIfEqual = (arr1, arr2) => {\n\treturn arr1.sort().join(',') === arr2.sort().join(',')\n}\n\nfunction sanitizeInput(string) {\n\tconst acceptableChars = [\n\t\t'0',\n\t\t'1',\n\t\t'2',\n\t\t'3',\n\t\t'4',\n\t\t'5',\n\t\t'6',\n\t\t'7',\n\t\t'8',\n\t\t'9',\n\t\t'(',\n\t\t')',\n\t\t'+',\n\t\t'-',\n\t\t'*',\n\t\t'x',\n\t\t'/',\n\t\t'\\u0020',\n\t]\n\tstring = string.toLowerCase()\n\tconst result = []\n\tfor (let char of string) {\n\t\tif (acceptableChars.includes(char)) {\n\t\t\tresult.push(char.replace('x', '*'))\n\t\t}\n\t}\n\treturn result.join('')\n}\n\nexport default class App extends Component {\n\tstate = {\n\t\ttext: '',\n\t\tnumbers: [],\n\t\tsolutions: [],\n\t\tsolveFor: 24,\n\t\ttotal: 0, // Ideally exclude from state, but execute in Mathjs errors a lot\n\t\tshowSolution: false,\n\t\tshowHelp: false,\n\t}\n\n\tcreateNewCard = () => {\n\t\tconst [ arr, solutions ] = generateSolvableArray(this.state.solveFor)\n\t\tthis.setState({\n\t\t\ttext: '',\n\t\t\tnumbers: arr,\n\t\t\tsolutions: solutions,\n\t\t\ttotal: 0,\n\t\t\tshowSolution: false,\n\t\t})\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.createNewCard()\n\t\tdocument.querySelector('body').addEventListener('click', (e) => {\n\t\t\tif (e.target.className === 'app') {\n\t\t\t\tthis.setState({ showSolution: false })\n\t\t\t\tthis.setState({ showHelp: false })\n\t\t\t}\n\t\t})\n\t}\n\tshowHideHelp = () => {\n\t\tif (!this.state.showHelp) {\n\t\t\tthis.setState({ showSolution: false })\n\t\t}\n\t\tthis.setState({ showHelp: !this.state.showHelp })\n\t}\n\tshowHideCard = () => {\n\t\tif (!this.state.showSolution) {\n\t\t\tthis.setState({ showHelp: false })\n\t\t}\n\t\tthis.setState({ showSolution: !this.state.showSolution })\n\t}\n\n\tgetSolutions() {\n\t\treturn solver(this.state.numbers, this.state.solveFor)\n\t}\n\n\tcalculateOutput(text) {\n\t\ttry {\n\t\t\treturn Math.round(evaluate(text) * 100) / 100\n\t\t} catch (e) {\n\t\t\treturn null\n\t\t}\n\t}\n\tupdateInput(text) {\n\t\tconst updatedText = sanitizeInput(text)\n\t\tconst total =\n\t\t\ttext.length === 0\n\t\t\t\t? 0\n\t\t\t\t: this.calculateOutput(text) || this.state.total\n\t\tthis.setState({ text: updatedText, total: total })\n\t}\n\tbackspace = () => {\n\t\tconst updatedText = this.state.text.slice(0, -1)\n\t\tthis.updateInput(updatedText)\n\t}\n\n\tonInputChange = (event) => {\n\t\tthis.updateInput(event.target.value)\n\t}\n\tonButtonClick = (event) => {\n\t\tconst updatedText =\n\t\t\tthis.state.text + event.target.getAttribute('data-value')\n\t\tthis.updateInput(updatedText)\n\t}\n\tcheckIfSolved = () => {\n\t\tif (this.state.total === this.state.solveFor) {\n\t\t\tconst inputNumbers = this.state.text.match(/\\d+/g).map(Number)\n\t\t\tconst numbersToCheck = [ ...this.state.numbers ]\n\t\t\treturn checkIfEqual(inputNumbers, numbersToCheck)\n\t\t}\n\t}\n\n\tsubmitSolution = (event) => {\n\t\tevent.preventDefault()\n\t\tif (this.checkIfSolved()) {\n\t\t\tthis.setState({ showSolution: !this.state.showSolution })\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<GameCard\n\t\t\t\t\tnumbers={this.state.numbers}\n\t\t\t\t\tonClick={this.onButtonClick}\n\t\t\t\t/>\n\t\t\t\t<MathInputBox\n\t\t\t\t\tvalue={this.state.text}\n\t\t\t\t\tonChange={this.onInputChange}\n\t\t\t\t\tonSubmit={this.submitSolution}\n\t\t\t\t\ttotal={this.state.total}\n\t\t\t\t\tbackspace={this.backspace}\n\t\t\t\t/>\n\t\t\t\t<SolutionCard\n\t\t\t\t\tuserSolution={this.state.text}\n\t\t\t\t\tsolved={this.checkIfSolved()}\n\t\t\t\t\tsolutions={this.state.solutions}\n\t\t\t\t\tnewCard={this.createNewCard}\n\t\t\t\t\tshowSolution={this.state.showSolution}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"buttons\">\n\t\t\t\t\t<button className=\"button\" onClick={this.submitSolution}>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"button\" onClick={this.showHideCard}>\n\t\t\t\t\t\tI Give Up\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"button\" onClick={this.showHideHelp}>\n\t\t\t\t\t\tHow the Heck?\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<HelpPage\n\t\t\t\t\tshow={this.state.showHelp}\n\t\t\t\t\tshowHideHelp={this.showHideHelp}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.querySelector('#root'))\n"],"sourceRoot":""}